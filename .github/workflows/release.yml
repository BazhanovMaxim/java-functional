name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3). If set, a tag v<version> is created and released.'
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Если запуск из UI и введена версия — создаём тег v<version> и пушим его
      - name: Create tag (workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        run: |
          VERSION="${{ inputs.version }}"
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Set up JDK 17 with Maven Central & GPG
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_USERNAME }}   # PLAIN!
          server-password: ${{ secrets.OSSRH_PASSWORD }}   # PLAIN!
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}  # ascii-armored
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      # Не нужен master-password; гарантированно убираем
      - name: Ensure no Maven master-password file
        run: rm -f ~/.m2/settings-security.xml

      # Жёсткая валидация: пароль не должен быть Maven-encrypted {…}
      - name: Assert OSSRH password is plain (not Maven-encrypted)
        run: |
          SETTINGS=~/.m2/settings.xml
          test -f "$SETTINGS" || (echo "::error::No ~/.m2/settings.xml"; exit 1)
          if grep -Ezo '<server>[^<]*<id>ossrh</id>[^<]*<password>\s*\{.+\}\s*</password>' "$SETTINGS"; then
            echo "::error::OSSRH password looks Maven-encrypted ({...}). Put PLAIN Sonatype token to OSSRH_PASSWORD secret."
            exit 1
          fi

      # Опционально: показать, что ключ импортирован
      - name: GPG sanity
        run: gpg --list-secret-keys --keyid-format LONG

      # Выносим passphrase в env, чтобы не было депрекейта
      - name: Build, test, sign & deploy to OSSRH (staging)
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn -B -Prelease clean verify
          mvn -B -Prelease deploy -DskipTests=false

      - name: Upload JaCoCo HTML report
        if: always() && success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: target/site/jacoco

      # Release when triggered by push tag
      - name: Create GitHub Release (push tag)
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Release when triggered manually with version
      - name: Create GitHub Release (manual)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
