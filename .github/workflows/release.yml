name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3). If set, a tag v<version> is created and released.'
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫ –∏–∑ UI –∏ –≤–≤–µ–¥–µ–Ω–∞ –≤–µ—Ä—Å–∏—è ‚Äî —Å–æ–∑–¥–∞—ë–º —Ç–µ–≥ v<version> –∏ –ø—É—à–∏–º –µ–≥–æ
      - name: Create tag (workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        run: |
          VERSION="${{ inputs.version }}"
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Set up JDK 17 with Maven Central & GPG
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      # üîΩ –∫–ª–∞–¥—ë–º passphrase –≤ —Ñ–∞–π–ª –∏ –¥–∞—ë–º –ø—Ä–∞–≤–∞ —Ç–æ–ª—å–∫–æ owner'—É
      - name: Write GPG passphrase file
        run: |
          mkdir -p ~/.gnupg
          umask 077
          echo "${{ secrets.GPG_PASSPHRASE }}" > ~/.gnupg/passphrase.txt

      - name: GPG sanity
        run: gpg --list-secret-keys --keyid-format LONG

      - name: Build, test, sign & deploy to OSSRH (staging)
#        env:
#          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        env:
          GPG_PASSPHRASE_FILE: ${{ github.workspace }}/../.gnupg/passphrase.txt
        run: |
          mvn -B -Prelease clean verify
          mvn -B -Prelease deploy -DskipTests=false

        # -Dgpg.passphrase="${GPG_PASSPHRASE}"

      - name: Upload JaCoCo HTML report
        if: always() && success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: target/site/jacoco

      # –ü–∞–±–ª–∏—à GitHub Release
      # 1) –µ—Å–ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä ‚Äî push tag: —Ç—ç–≥ —É–∂–µ –µ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å tag_name
      - name: Create GitHub Release (push tag)
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 2) –µ—Å–ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä ‚Äî workflow_dispatch: —É–∫–∞–∂–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞–º–∏ —Ç–µ–≥ —è–≤–Ω–æ
      - name: Create GitHub Release (manual)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
