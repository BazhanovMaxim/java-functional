name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3). If set, a tag v<version> is created and released.'
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Если запуск из UI и введена версия — создаём тег v<version> и пушим его
      - name: Create tag (workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        run: |
          VERSION="${{ inputs.version }}"
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Show effective settings (debug)
        run: |
          mvn -q help:effective-settings -Doutput=effective-settings.xml
          grep -n "server" -n effective-settings.xml || true

      - name: Set up JDK 17 with Maven Central & GPG
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      # ❗ удалить, если случайно остался: settings-security.xml не нужен
      - name: Ensure no Maven master-password file
        run: rm -f ~/.m2/settings-security.xml

      # (опционально) проверить, что секретный ключ реально импортирован
      - name: GPG sanity
        run: gpg --list-secret-keys --keyid-format LONG

      # Сборка+деплой. Passphrase передаём параметром, чтобы gpg плагин не искал мастер-пароль
      - name: Build, test, sign & deploy to OSSRH (staging)
        run: |
          mvn -B -Prelease -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}" clean verify
          mvn -B -Prelease -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}" deploy -DskipTests=false

      - name: Upload JaCoCo HTML report
        if: always() && success()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: target/site/jacoco

      # Паблиш GitHub Release
      - name: Create GitHub Release (push tag)
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release (manual)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
